{"version":3,"sources":["images/collaborate.svg","images/remote.svg","actions/index.js","actions/types.js","components/GoogleAuth.js","components/NotificationDropdown.js","components/AppBar.js","components/project/TaskCard.js","components/project/ProjectCardColumn.js","components/project/ProjectChat.js","components/project/ProjectAlert.js","components/project/ViewProject.js","components/LandingPage.js","components/project/NewProject.js","components/project/ViewAllProjects.js","components/EnsureLoggedInContainer.js","components/App.js","reducers/authReducer.js","reducers/index.js","reducers/projectsReducer.js","reducers/selectProjectReducer.js","index.js"],"names":["module","exports","editTask","projectId","taskId","status","dispatch","a","axios","put","type","payload","GoogleAuth","onAuthChange","isSignedIn","props","history","redirectURL","signIn","auth","currentUser","get","getBasicProfile","console","log","push","signOut","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","this","Tooltip","title","IconButton","color","onClick","Fragment","to","Button","size","variant","renderAuthButton","React","Component","connect","state","basicProfile","user","_id","MU","name","Ad","post","response","data","userId","notifications","withRouter","NotificationDropdown","anchorEl","handleClick","event","length","setState","currentTarget","handleClose","notificationID","projectID","requesterID","removeNotification","renderNotifications","map","notif","ListItem","className","classes","menuItem","key","ListItemText","listItemText","notification","requesterId","open","Boolean","id","undefined","aria-controls","aria-haspopup","Badge","badgeContent","Popper","ClickAwayListener","onClickAway","paper","list","wrapped","withStyles","theme","backgroundColor","palette","lighter","width","primary","main","fontSize","ButtonAppBar","renderButtons","component","Link","root","AppBar","position","Toolbar","toolBar","Typography","homeLink","Hidden","smDown","toggleTheme","mdUp","Menu","keepMounted","onClose","MenuItem","responsiveLink","flexGrow","textDecoration","menuButton","marginRight","spacing","secondary","light","minHeight","maxHeight","useStyles","makeStyles","card","marginBottom","border","author","float","info","dragStyle","opacity","draggedActive","TaskCard","task","content","Card","draggable","onDragStart","e","target","classList","add","draggedElement","setTimeout","remove","dataTransfer","setData","dragStart","onDragEnd","dragEnd","CardContent","gutterBottom","CardActions","disableSpacing","Grid","container","direction","justify","alignItems","item","xs","style","textAlign","arrow","handleTaskEdit","div","height","padding","overflow","borderRadius","divider","cardContainer","marginTop","addField","expansionPanel","background","inputLabel","input","inputOutline","borderColor","expansionDetails","display","justifyContent","enterTask","expansionPanelSummary","ProjectCardColumn","useDispatch","match","useRouteMatch","path","exact","strict","sensitive","onDragOver","preventDefault","onDrop","getData","colName","getAttribute","clearData","Completed","params","emitTaskChange","laneheader","header","ExpansionPanel","ExpansionPanelSummary","expandIcon","heading","ExpansionPanelDetails","onSubmit","onAddSubmit","TextField","fullWidth","InputLabelProps","InputProps","notchedOutline","label","value","addTodo","onChange","disabled","Divider","cardcontainer","cards","ProjectChat","listEnd","scrollToBottom","ele","scrollIntoView","behavior","achorEl","renderChatMessages","chat","el","listItem","Paper","chatBubble","noWrap","message","button","popper","chatContainer","align","chatList","clear","ref","form","noValidate","autoComplete","textfield","textfieldRoot","textfieldLabel","currentChat","boxSizing","marginLeft","cursor","borderBottom","bottom","borderTop","borderWidth","maxWidth","wordWrap","alert","ProjectAlert","users","projectName","useState","setOpen","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","uuid","ViewProject","socket","io","newChat","emit","onChatChange","onChatSubmit","createdAt","Date","toLocaleString","addTask","currentStatus","newStatus","fetchProject","on","addChat","tasks","projectUsers","some","wrapper","Container","grid","sm","filter","footer","projectUtilRow","margin","top","left","ownProps","selectProject","taskWithId","LandingPage","buttonLink","getStarted","subWrapper1","md","src","collabPicture","alt","descriptionContainer","descriptionAnimation","subWrapper2","remotePicture","description","from","animationName","animationDuration","NewProject","redirect","handleChange","createProject","CssBaseline","Avatar","avatar","createHeading","required","autoFocus","multilineColor","submit","projectInfo","getState","project","flexDirection","tableContainer","tableRow","tableCell","ViewAllProjects","useSelector","projects","Object","values","useEffect","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","proj","EnsureLoggedInContainer","currentURL","setRedirectUrl","children","location","pathname","darkMode","setDarkMode","createMuiTheme","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","overrides","MuiMenu","MuiExpansionPanelSummary","shadows","ThemeProvider","INITIAL_STATE","combineReducers","action","_","mapKeys","find","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","App","document","querySelector"],"mappings":"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","file":"static/js/main.baf2bdf2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/collaborate.98bfd8db.svg\";","module.exports = __webpack_public_path__ + \"static/media/remote.2c53a164.svg\";","import { v4 as uuid } from \"uuid\";\nimport axios from \"axios\";\n\n//use variables for action types to prevent typos\nimport {\n  SIGN_IN,\n  SIGN_OUT,\n  CREATE_PROJECT,\n  FETCH_PROJECTS,\n  FETCH_PROJECT,\n  ADD_TASK,\n  ADD_CHAT,\n  EDIT_TASK,\n  SET_REDIRECT_URL,\n  REMOVE_NOTIFICATION,\n} from \"./types\";\n\n// google auth\nexport const signIn = (basicProfile) => async (dispatch) => {\n  const user = {\n    _id: basicProfile.MU,\n    name: basicProfile.Ad,\n  };\n\n  const response = await axios.post(\"/user/new\", user);\n\n  const { _id: userId, name, notifications } = response.data;\n\n  dispatch({\n    type: SIGN_IN,\n    payload: { userId, name, notifications },\n  });\n};\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT,\n  };\n};\n\n// to add a new project to the state\nexport const createProject = (projectInfo) => async (dispatch, getState) => {\n  //generate id for new project\n  const _id = uuid();\n\n  //get current user id\n  const { userId } = getState().auth;\n\n  const project = { ...projectInfo, _id, users: [userId], chat: [], tasks: [] };\n\n  const response = await axios.post(\"/project/new\", project);\n\n  //dispatch created project to state\n  dispatch({\n    type: CREATE_PROJECT,\n    payload: response.data,\n  });\n};\n\n//get ALL projects associated with user\nexport const fetchProjects = (id) => async (dispatch) => {\n  //fetch data using user id\n  const { data } = await axios.get(`/${id}/project/all/`);\n\n  dispatch({\n    type: FETCH_PROJECTS,\n    payload: data,\n  });\n};\n\n//get a single project -- will go under Selected project reducer/state\nexport const fetchProject = (id) => async (dispatch) => {\n  //fetch data using project id\n  const { data } = await axios.get(`/project/${id}`);\n\n  dispatch({\n    type: FETCH_PROJECT,\n    payload: data,\n  });\n};\n\n// add a single task to a single project\nexport const addTask = (projectId, task) => async (dispatch) => {\n  //asign task an id\n  const taskWithId = { ...task, _id: uuid() };\n\n  //update project on back end with new task\n  const response = await axios.put(\n    `/project/${projectId}/task/new`,\n    taskWithId\n  );\n\n  //update state with new task\n  dispatch({\n    type: ADD_TASK,\n    payload: taskWithId, //add id to task\n  });\n};\n\n// add a single chat message to state\nexport const addChat = (chat) => {\n  return {\n    type: ADD_CHAT,\n    payload: chat,\n  };\n};\n\nexport const editTask = (projectId, taskId, status) => async (dispatch) => {\n  //update project on back end with edited task\n  const response = await axios.put(\n    `/project/${projectId}/task/edit/${taskId}`,\n    { status: status }\n  );\n\n  //update state with edited task\n  dispatch({\n    type: EDIT_TASK,\n    payload: {\n      taskId: taskId,\n      status: status,\n    },\n  });\n};\n\nexport const setRedirectUrl = (redirectURL) => async (dispatch) => {\n  dispatch({\n    type: SET_REDIRECT_URL,\n    payload: {\n      redirectURL: redirectURL,\n    },\n  });\n};\n\nexport const removeNotification = (notificationID) => {\n  return {\n    type: REMOVE_NOTIFICATION,\n    payload: notificationID,\n  };\n};\n","export const SIGN_IN = \"SIGN_IN\";\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const CREATE_PROJECT = \"CREATE_PROJECT\";\nexport const FETCH_PROJECTS = \"FETCH_PROJECTS\";\nexport const FETCH_PROJECT = \"FETCH_PROJECT\";\nexport const ADD_TASK = \"ADD_TASK\";\n\nexport const ADD_CHAT = \"ADD_CHAT\";\n\nexport const SET_REDIRECT_URL = \"SET_REDIRECT_URL\";\n\nexport const EDIT_TASK = \"EDIT_TASK\";\n\nexport const CREATE_USER = \"CREATE_USER\";\nexport const REMOVE_NOTIFICATION = \"REMOVE_NOTIFICATION\";\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\nimport { IconButton, Tooltip, Button } from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { Link, withRouter } from 'react-router-dom';\n\n\nclass GoogleAuth extends React.Component {\n  // Wires up the API library to our project, loaded additional code into our library, and then initialized the authentication client\n  componentDidMount() {\n    \n    // console.log(window.gapi);\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client\n        .init({\n          clientId:\n            \"854431462593-vqo0k8ghhideugv5gpc1dvj227spe4cl.apps.googleusercontent.com\",\n          scope: \"email\",\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          // Updates state in our redux store\n          this.onAuthChange(this.auth.isSignedIn.get());\n          // Waits for authentication state to change some time in the future\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n\n  onAuthChange = (isSignedIn) => {\n    const { history,redirectURL } = this.props\n    if (isSignedIn) {\n      this.props.signIn(this.auth.currentUser.get().getBasicProfile());\n      console.log(\"when signed in, the redirect URL is: \" + redirectURL)\n      if(history && redirectURL !== null) history.push(redirectURL);\n    } else {\n      this.props.signOut();\n      console.log(\"when note signed in, the redirected to home i.e. /\")\n      if(history) history.push(\"/\");\n    }\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  };\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  };\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null && this.props.type === 'appbar') {\n      return null;\n    } else if (this.props.isSignedIn && this.props.type === 'appbar') {\n      return (\n\n        <Tooltip title='Sign Out'>\n          <IconButton color='primary' onClick={this.onSignOutClick}>\n            <PersonIcon color='primary' />\n\n          </IconButton>\n        </Tooltip>\n      );\n    } else if (!this.props.isSignedIn && this.props.type === 'appbar') {\n      return (\n        <Tooltip title='Sign In with Google'>\n          <IconButton onClick={this.onSignInClick}>\n            <PersonIcon color=\"secondary\" />\n          </IconButton>\n        </Tooltip>\n      );\n    } else if (this.props.isSignedIn && this.props.type === 'landing') {\n      return (\n        <React.Fragment>\n          <Link to='/project/new'>\n            <Button size='small' color='secondary' variant='contained'>\n              Get Started\n            </Button>\n          </Link>\n        </React.Fragment>\n      );\n    } else if (!this.props.isSignedIn && this.props.type === 'landing') {\n      return (\n        <React.Fragment>\n          <Button\n            size='small'\n            color='secondary'\n            variant='contained'\n            onClick={this.onSignInClick}\n          >\n            Get Started\n          </Button>\n          ;\n        </React.Fragment>\n      );\n    }\n  }\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { isSignedIn: state.auth.isSignedIn,\n    redirectURL: state.auth.redirectURL };\n};\n\nexport default connect(mapStateToProps, { signIn, signOut })(withRouter(GoogleAuth));\n","import React from \"react\";\nimport {\n  withStyles,\n  List,\n  ListItem,\n  ListItemText,\n  ClickAwayListener,\n  Badge,\n  Popper,\n  IconButton,\n  Tooltip,\n} from \"@material-ui/core\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\n\nimport { removeNotification } from \"../actions\";\n\nconst styles = (theme) => ({\n  paper: {\n    backgroundColor: theme.palette.paper.lighter,\n  },\n  list: {\n    width: 300,\n  },\n  listItemText: {\n    color: theme.palette.primary.main,\n    fontSize: 12,\n  },\n});\n\nclass NotificationDropdown extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleClick = (event) => {\n    if (this.props.notifications && this.props.notifications.length > 0) {\n      this.setState({\n        anchorEl: this.state.anchorEl ? null : event.currentTarget,\n      });\n    }\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  //handle accepting permission\n  onClick = (notificationID, projectID, requesterID) => {\n    console.log(requesterID);\n    axios\n      .put(`/accept/request/${projectID}`, {\n        userId: this.props.userId,\n        requesterID,\n        notificationID,\n      })\n      .then((response) => this.props.removeNotification(notificationID));\n    this.setState({ anchorEl: null });\n  };\n\n  renderNotifications = () => {\n    return this.props.notifications.map((notif) => {\n      return (\n        <ListItem\n          className={this.props.classes.menuItem}\n          onClick={this.handleClose}\n          key={notif._id}\n        >\n          <ListItemText className={this.props.classes.listItemText}>\n            {notif.notification}\n          </ListItemText>\n          <IconButton\n            color=\"secondary\"\n            onClick={() =>\n              this.onClick(notif._id, notif.projectId, notif.requesterId)\n            }\n          >\n            <CheckIcon />\n          </IconButton>\n          <IconButton color=\"secondary\">\n            <ClearIcon />\n          </IconButton>\n        </ListItem>\n      );\n    });\n  };\n\n  render() {\n    const open = Boolean(this.state.anchorEl);\n    const id = open ? \"simple-popper\" : undefined;\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        <Tooltip title=\"Notifications\">\n          <IconButton\n            aria-controls=\"simple-menu\"\n            aria-haspopup=\"true\"\n            onClick={this.handleClick}\n            color=\"primary\"\n          >\n            <Badge badgeContent={this.props.notifications.length} color=\"error\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Tooltip>\n\n        <Popper id={id} open={open} anchorEl={this.state.anchorEl}>\n          <ClickAwayListener onClickAway={this.handleClose}>\n            <div className={classes.paper}>\n              <List className={classes.list}>{this.renderNotifications()}</List>\n            </div>\n          </ClickAwayListener>\n        </Popper>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { userId: state.auth.userId, notifications: state.auth.notifications };\n};\n\nconst wrapped = connect(mapStateToProps, { removeNotification })(\n  NotificationDropdown\n);\n\nexport default withStyles(styles)(wrapped);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  ButtonGroup,\n  Menu,\n  MenuItem,\n  Hidden,\n  Tooltip,\n  IconButton,\n  withStyles,\n  Badge,\n} from \"@material-ui/core\";\n\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport Brightness5Icon from \"@material-ui/icons/Brightness5\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport GoogleAuth from \"./GoogleAuth\";\nimport { connect } from \"react-redux\";\nimport NotificationDropdown from \"./NotificationDropdown\";\n\nconst styles = (theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  homeLink: {\n    textDecoration: \"none\",\n    color: theme.palette.primary.main,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuItem: {\n    backgroundColor: theme.palette.paper.lighter,\n    color: theme.palette.secondary.main,\n    \"&:hover\": {\n      backgroundColor: theme.palette.paper.light,\n    },\n  },\n  toolBar: {\n    minHeight: \"7vh\",\n    maxHeight: \"7vh\",\n    backgroundColor: theme.palette.paper.main,\n  },\n  color: {\n    color: \"#FEB2D0\",\n  },\n  responsiveLink: {\n    color: theme.palette.secondary.main,\n  },\n});\n\nclass ButtonAppBar extends React.Component {\n  //anchor element for dropdown menu on smaller screens\n  state = {\n    anchorEl: null,\n  };\n\n  // handle opening and closing of dropdown\n  handleClick = (event) => {\n    // setAnchorEl(event.currentTarget);\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    // setAnchorEl(null);\n    this.setState({ anchorEl: null });\n  };\n\n  renderButtons = () => {\n    if (this.props.isSignedIn) {\n      return (\n        <React.Fragment>\n          <Tooltip title=\"Notifications\">\n            <NotificationDropdown />\n          </Tooltip>\n          <Tooltip title=\"Create a New Project\">\n            <IconButton color=\"primary\" component={Link} to=\"/project/new\">\n              <AddIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"View Existing Projects\">\n            <IconButton color=\"primary\" component={Link} to=\"/project/view/all\">\n              <ListIcon />\n            </IconButton>\n          </Tooltip>\n        </React.Fragment>\n      );\n    }\n  };\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar className={classes.toolBar}>\n            <Typography color=\"primary\" variant=\"h5\" className={classes.title}>\n              <Link className={classes.homeLink} to=\"/\">\n                Projectify\n              </Link>\n            </Typography>\n\n            {/* Main app bar buttons - hidden on smaller screen size */}\n            <Hidden smDown>\n              {this.renderButtons()}\n              <Tooltip title=\"Toggle Dark Mode\">\n              <IconButton onClick={this.props.toggleTheme} color=\"primary\">\n                <Brightness5Icon />\n              </IconButton>\n              </Tooltip>\n              <GoogleAuth type=\"appbar\" />\n            </Hidden>\n\n            {/* Drop down menu -- hidden on larger screen sizes */}\n            <Hidden mdUp>\n              <GoogleAuth type=\"appbar\" />\n              <Button\n                color=\"primary\"\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                onClick={this.handleClick}\n              >\n                <DehazeIcon />\n              </Button>\n              <Menu\n                id=\"simple-menu\"\n                anchorEl={this.state.anchorEl}\n                keepMounted\n                open={Boolean(this.state.anchorEl)}\n                onClose={this.handleClose}\n              >\n                <MenuItem\n                  className={classes.menuItem}\n                  onClick={this.handleClose}\n                >\n                  <Link className={classes.responsiveLink} to=\"/project/new\">\n                    Create New Project\n                  </Link>\n                </MenuItem>\n                <MenuItem\n                  className={classes.menuItem}\n                  onClick={this.handleClose}\n                >\n                  <Link\n                    to=\"/project/view/all\"\n                    className={classes.responsiveLink}\n                  >\n                    View Existing Projects\n                  </Link>\n                </MenuItem>\n              </Menu>\n            </Hidden>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\n//get sign in status from state\nconst mapStateToProps = (state) => {\n  return { isSignedIn: state.auth.isSignedIn };\n};\n\nconst wrapped = connect(mapStateToProps)(ButtonAppBar);\nexport default withStyles(styles)(wrapped);\n","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Grid,\n  makeStyles,\n  Button,\n} from \"@material-ui/core\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    backgroundColor: theme.palette.paper.main,\n    marginBottom: 5,\n    border: theme.palette.paper.main === \"#FFFFFF\" ? `solid 1px #999999` : null,\n  },\n  author: {\n    float: \"right\",\n    color: theme.palette.info.main,\n  },\n  dragStyle: {\n    backgroundColor: \"#a30309\",\n    color: \"white\",\n    opacity: 1,\n  },\n  draggedActive: {\n    opacity: 0,\n  },\n}));\n\nexport default function TaskCard(props) {\n  const classes = useStyles();\n\n  // get current task => get content of task\n  const { task } = props;\n  const { content, author, status, _id } = task;\n\n  function dragStart(event) {\n    event.target.classList.add(classes.dragStyle);\n\n    let draggedElement = event.target;\n    setTimeout(function () {\n      draggedElement.classList.remove(classes.dragStyle);\n      draggedElement.classList.add(classes.draggedActive);\n    }, 1);\n\n    event.dataTransfer.setData(\"text\", event.target.id);\n  }\n  function dragEnd(event) {\n    let draggedElement = event.target;\n    setTimeout(function () {\n      draggedElement.classList.remove(classes.draggedActive);\n    }, 100);\n  }\n\n  return (\n    <Card\n      className={classes.card}\n      id={_id}\n      draggable=\"true\"\n      onDragStart={(e) => dragStart(e)}\n      onDragEnd={(e) => dragEnd(e)}\n    >\n      <CardContent>\n        <Typography variant=\"subtitle1\" color=\"primary\" gutterBottom>\n          {content}\n        </Typography>\n        <Typography\n          className={classes.author}\n          variant=\"caption\"\n          color=\"secondary\"\n        >\n          - {author}\n        </Typography>\n      </CardContent>\n      {status === \"todo\" || status === \"inprogress\" ? (\n        <CardActions disableSpacing>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-end\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={1} style={{ textAlign: \"center\" }}>\n              <Button\n                className={classes.arrow}\n                color=\"secondary\"\n                onClick={() => props.handleTaskEdit(task._id,task.status)}\n              >\n                <ArrowForwardIcon color=\"secondary\" />\n              </Button>\n            </Grid>\n          </Grid>\n        </CardActions>\n      ) : null}\n    </Card>\n  );\n}\n","import React from \"react\";\nimport {\n  Typography,\n  Divider,\n  makeStyles,\n  Button,\n  TextField,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  IconButton,\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport TaskCard from \"./TaskCard\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { editTask } from \"../../actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  //main outer column div\n  div: {\n    height: \"75vh\",\n    backgroundColor: theme.palette.paper.light,\n    padding: 15,\n    border: theme.palette.paper.main === \"#FFFFFF\" ? \"solid 1px #999999\" : null,\n    overflow: \"auto\",\n    \"&::-webkit-scrollbar-track-piece\": {\n      backgroundColor: theme.palette.paper.main,\n    },\n    \"&::-webkit-scrollbar-thumb\": {\n      backgroundColor: theme.palette.primary.main,\n      borderRadius: 3,\n    },\n    \"&::-webkit-scrollbar-button\": {\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n  divider: {\n    // marginTop: 15,\n    backgroundColor: \"#999999\",\n  },\n  cardContainer: {\n    marginTop: 15,\n  },\n  addField: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  expansionPanel: {\n    background: \"none\",\n    color: theme.palette.primary.main,\n  },\n  inputLabel: {\n    color: theme.palette.info.main,\n  },\n  input: {\n    color: theme.palette.info.main,\n  },\n  inputOutline: {\n    borderColor: theme.palette.info.main,\n  },\n  expansionDetails: {\n    display: \"inline-block\",\n    justifyContent: \"center\",\n    width: \"85%\",\n    padding: \"0 10px\",\n  },\n  enterTask: {\n    marginBottom: 5,\n  },\n  expansionPanelSummary: {\n    height: 50\n  }\n}));\n\nexport default function ProjectCardColumn(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const match = useRouteMatch({\n    path: \"/project/view/:id\",\n    exact: true,\n    strict: true,\n    sensitive: true,\n  });\n\n  //handle drag events\n  function onDragOver(event) {\n    event.preventDefault();\n  }\n\n  // change task status when drag&drop is done\n  function onDrop(event) {\n    const id = event.dataTransfer.getData(\"text\");\n\n    const colName = event.target.getAttribute(\"laneheader\");\n\n    event.dataTransfer.clearData();\n\n    let status = {\n      \"Things To Do\": \"todo\",\n      \"In Progress\": \"inprogress\",\n      Completed: \"completed\",\n    }[colName];\n    if (status) {\n      dispatch(editTask(match.params.id, id, status));\n      props.emitTaskChange();\n    }\n  }\n\n  // specificly modify the todo column to have input when + is clicked\n  const renderAddList = () => {\n    return (\n      <ExpansionPanel className={classes.expansionPanel}>\n        <ExpansionPanelSummary\n          className={classes.expansionPanelSummary}\n          expandIcon={\n            <IconButton color=\"secondary\">\n              <AddIcon />\n            </IconButton>\n          }\n        >\n          <Typography variant=\"h6\" className={classes.heading}>\n            {props.header}\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails className={classes.expansionDetails}>\n          <form onSubmit={props.onAddSubmit}>\n            <TextField\n              className={classes.enterTask}\n              fullWidth\n              variant=\"outlined\"\n              color=\"secondary\"\n              InputLabelProps={{ className: classes.inputLabel }}\n              InputProps={{\n                classes: {\n                  root: classes.input,\n                  notchedOutline: classes.inputOutline,\n                },\n              }}\n              id=\"standard-basic\"\n              label=\"Enter a new task\"\n              value={props.addTodo}\n              onChange={props.onChange}\n            />\n            <br />\n            <Button\n              type=\"submit\"\n              size=\"small\"\n              color=\"secondary\"\n              variant=\"contained\"\n            >\n              Submit\n            </Button>\n          </form>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    );\n  };\n\n  return (\n    <div\n      className={classes.div}\n      onDragOver={onDragOver}\n      onDrop={onDrop}\n      laneheader={props.header}\n    >\n      {/* <div className={classes.header}> */}\n      {props.header === \"Things To Do\" ? (\n        renderAddList()\n      ) : (\n        <ExpansionPanel className={classes.expansionPanel}>\n          <ExpansionPanelSummary className={classes.expansionPanelSummary} disabled>\n            <Typography variant=\"h6\" className={classes.heading}>\n              {props.header}\n            </Typography>\n          </ExpansionPanelSummary>\n        </ExpansionPanel>\n      )}\n      <Divider variant=\"fullWidth\" light={true} className={classes.divider} />\n\n      <div className={classes.cardContainer} cardcontainer=\"true\">\n        {props.cards &&\n          props.cards.map((task) => (\n            <TaskCard\n              handleTaskEdit={props.handleTaskEdit}\n              key={task._id}\n              task={task}\n            />\n          ))}\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport {\n  Popper,\n  Typography,\n  TextField,\n  ClickAwayListener,\n  withStyles,\n  List,\n  ListItem,\n  Paper,\n  Box,\n} from \"@material-ui/core\";\n\nconst styles = (theme) => ({\n  popper: {\n    height: \"351px\",\n    width: \"284px\",\n  },\n  chatContainer: {\n    height: \"100%\",\n    width: \"100%\",\n    backgroundColor: theme.palette.paper.lighter,\n    position: \"relative\",\n    border: \"solid 1px\",\n    borderColor: theme.palette.secondary.main,\n  },\n  paper: {\n    backgroundColor: theme.palette.paper.light,\n    padding: \"5px 0\",\n  },\n  chatList: {\n    maxHeight: \"65%\",\n    overflow: \"auto\",\n  },\n  button: {\n    backgroundColor: theme.palette.secondary.main,\n    boxSizing: \"border-box\",\n    width: \"287px\",\n    padding: \"5px 30px\",\n    borderRadius: 0,\n    marginLeft: \"auto\",\n    marginRight: 20,\n    borderRadius: 3,\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  heading: {\n    borderBottom: \"solid 1px black\",\n  },\n  form: {\n    position: \"absolute\",\n    bottom: \"0\",\n    width: \"100%\",\n  },\n  textfield: {\n    width: \"100%\",\n    borderTop: `solid 1px ${theme.palette.secondary.main}`,\n  },\n  textfieldLabel: {\n    color: theme.palette.info.main,\n  },\n  notchedOutline: {\n    borderWidth: \"1px\",\n    borderColor: theme.palette.secondary.main,\n    color: \"yellow !important\",\n  },\n  textfieldRoot: {\n    color: theme.palette.primary.main === \"#7BC8F6\" ? \"#fff\" : \"000000\",\n    padding: \"0 10px\",\n  },\n  divider: {\n    width: \"100%\",\n  },\n  chatBubble: {\n    backgroundColor: theme.palette.secondary.main,\n    // display: \"flex\",\n    padding: \"0 5px\",\n    borderRadius: 5,\n    maxWidth: \"90%\",\n    wordWrap: \"break-word\",\n  },\n  listItem: {\n    padding: \"0 5px\",\n    marginBottom: 5,\n  },\n});\n\nclass ProjectChat extends Component {\n\n  // listEnd = React.createRef();\n  listEnd = null;\n\n  scrollToBottom = (ele = this.listEnd) => {\n    if(ele){\n      ele.scrollIntoView({ behavior: \"auto\" });\n    }    \n  }\n  \n  componentDidMount() {\n    this.scrollToBottom();\n  }\n  \n  componentDidUpdate() {\n    setTimeout(()=> this.scrollToBottom(), 200);\n  }\n\n  //anchor element for chat box\n  state = {\n    achorEl: null,\n  };\n\n  // set click handler for opening/closing chat box\n  handleClick = (event) => {\n    this.setState({\n      anchorEl: this.state.anchorEl ? null : event.currentTarget,\n    });\n    console.log(\"HandleClick popper called\")\n    console.log(event.currentTarget);\n  };\n\n  //set click away listener to close chat box\n  onClickAway = () => {\n    this.setState({\n      anchorEl: null,\n    });\n  };\n\n  //render all chat messages into chat bubbles\n  renderChatMessages = () => {\n    return (\n      this.props.chat &&\n      this.props.chat.map((el) => {\n        return (\n          <ListItem className={this.props.classes.listItem}>\n            <Paper className={this.props.classes.chatBubble}>\n              <Typography noWrap={false} variant=\"body2\" color=\"inherit\">\n                {el.message}\n              </Typography>\n              <Typography variant=\"caption\" color=\"inherit\">\n                - {el.author}\n              </Typography>\n            </Paper>\n          </ListItem>\n        );\n      })\n    );\n  };\n\n  render() {\n    const open = Boolean(this.state.anchorEl);\n    const id = this.open ? \"simple-popper\" : undefined;\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        <Paper\n          borderRadius=\"borderRadius\"\n          onClick={this.handleClick}\n          className={classes.button}\n          color=\"secondary\"\n        >\n          <Typography variant=\"body1\" color=\"inherit\">\n            Chat\n          </Typography>\n        </Paper>\n\n        <Popper\n          className={classes.popper}\n          id={id}\n          open={open}\n          anchorEl={this.state.anchorEl}\n        >\n          <ClickAwayListener onClickAway={this.onClickAway}>\n            <div className={classes.chatContainer}>\n              <Paper className={classes.paper}>\n                <Typography variant=\"h6\" align=\"center\" color=\"secondary\">\n                  Chat\n                </Typography>\n              </Paper>\n\n              <List className={classes.chatList} id=\"chat-container\" >\n                {this.renderChatMessages()}\n                <div style={{ float: \"left\", clear: \"both\" }} id=\"dummyChat\"\n                  ref={(el) => {this.listEnd = el}}>\n                </div>\n              </List>\n\n              <form\n                onSubmit={this.props.onSubmit}\n                className={classes.form}\n                noValidate\n                autoComplete=\"off\"\n              >\n                <TextField\n                  className={classes.textfield}\n                  InputProps={{\n                    classes: {\n                      notchedOutline: classes.notchedOutline,\n                      root: classes.textfieldRoot,\n                    },\n                  }}\n                  InputLabelProps={{ className: classes.textfieldLabel }}\n                  size=\"small\"\n                  id=\"outlined-basic\"\n                  label=\"Type something...\"\n                  color=\"secondary\"\n                  value={this.props.currentChat}\n                  onChange={this.props.onChange}\n                />\n              </form>\n            </div>\n          </ClickAwayListener>\n        </Popper>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(ProjectChat);\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  makeStyles,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { v4 as uuid } from \"uuid\";\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    backgroundColor: theme.palette.paper.main,\n    color: theme.palette.info.main,\n  },\n}));\n\n//alert user that they are not a permitted user\nexport default function ProjectAlert({\n  projectId,\n  users,\n  projectName,\n  currentUser,\n}) {\n  const classes = useStyles();\n  //hook for whether alert is open or not\n  const [open, setOpen] = React.useState(true);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleRequest = () => {\n\n    //push new notification to project's permitted users\n    axios.put(\"/project/request/permission\", {\n      _id: uuid(),\n      projectId,\n      notification: `${currentUser.name} would like permission to access your project: ${projectName}`,\n      requesterId: currentUser.userId,\n      users,\n    });\n\n    //close dialog\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle className={classes.alert}>\n          Sorry, looks like you currently are not a member of this project.\n        </DialogTitle>\n        <DialogContent className={classes.alert}>\n          <DialogContentText\n            className={classes.alert}\n            id=\"alert-dialog-description\"\n          >\n            Would you like to request permission to join?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions className={classes.alert}>\n          <Button onClick={handleClose} color=\"secondary\" variant=\"outlined\">\n            Cancel\n          </Button>\n          <Button onClick={handleRequest} color=\"secondary\" variant=\"outlined\">\n            Request Permission\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Grid, withStyles, Container } from \"@material-ui/core\";\nimport io from \"socket.io-client\";\nimport { connect } from \"react-redux\";\nimport ProjectCardColumn from \"./ProjectCardColumn\";\nimport ProjectChat from \"./ProjectChat\";\nimport ProjectAlert from \"./ProjectAlert\";\nimport { fetchProject, addTask, addChat, editTask } from \"../../actions\";\nimport axios from \"axios\";\n\nconst styles = (theme) => ({\n  wrapper: {\n    width: \"100vw\",\n    maxWidth: \"100%\",\n    minHeight: \"93vh\",\n    display: \"flex\",\n    position: \"relative\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.paper.main,\n  },\n  container: {\n    padding: \"0 0 0 0\",\n  },\n  projectUtilRow: {\n    padding: \"0 24px\",\n  },\n  grid: {\n    margin: \"auto\",\n    marginTop: 5,\n  },\n  chat: {\n    position: \"fixed\",\n    bottom: 0,\n  },\n  footer: {\n    position: \"absolute\",\n    top: \"auto\",\n    bottom: 0,\n    left: 0,\n    width: \"100vw\",\n    display: \"flex\",\n  },\n});\n\nclass ViewProject extends React.Component {\n  //create top level socket variable\n  socket = io(\"/\");\n\n  //get id of current project\n  projectId = this.props.match.params.id;\n\n  //input states\n  state = { addTodo: \"\", newChat: \"\" };\n\n  componentDidMount() {\n    //get id from url\n    const { id } = this.props.match.params;\n    this.props.fetchProject(id);\n\n    //init socket.io\n\n    //join specific room for project\n    this.socket.on(\"connect\", () => {\n      this.socket.emit(\"room\", this.projectId);\n    });\n\n    //listener for incoming messages\n    this.socket.on(\"RECEIVE_MESSAGE\", (data) => {\n      console.log(data);\n      // make sure we aren't duplicating the current user's chats\n      // if (data.author !== this.props.currentUser.name) {\n      this.props.addChat(data);\n      // }\n    });\n\n    this.socket.on(\"UPDATE_PROJECT\", () => {\n      console.log(\"update\");\n      this.props.fetchProject(id);\n    });\n  }\n\n  // componentDidUpdate() {\n  //   this.socket.on(\"UPDATE_PROJECT\", () => {\n  //     console.log(\"update\");\n  //     this.props.fetchProject(this.props.match.params.id);\n  //   });\n  // }\n\n  // live task card changes\n  emitTaskChange = () => {\n    setTimeout(() => {\n      this.socket.emit(\"TASK_CHANGE\", { data: null });\n    }, 5000);\n  };\n\n  //controlled input for new todo\n  onChange = (event) => {\n    this.setState({ addTodo: event.target.value });\n  };\n\n  //controlled input for chat\n  onChatChange = (event) => {\n    this.setState({ newChat: event.target.value });\n  };\n\n  //handle chat submit\n  onChatSubmit = (e) => {\n    e.preventDefault();\n\n    //create object with current user as author, message, and a timestamp\n    const chat = {\n      author: this.props.currentUser.name,\n      message: this.state.newChat,\n      createdAt: new Date().toLocaleString(),\n    };\n\n    //send message through socket\n    this.socket.emit(\"SEND_MESSAGE\", chat);\n\n    // //call action creator to add new chat\n    // this.props.addChat(this.projectId, chat);\n\n    this.setState({ newChat: \"\" });\n\n    axios.put(`/project/${this.projectId}/chat`, chat);\n  };\n\n  //handle submission for a new task\n  onAddSubmit = (event) => {\n    event.preventDefault();\n\n    //get current user and add a status to the task\n    const task = {\n      author: this.props.currentUser.name,\n      content: this.state.addTodo,\n      status: \"todo\",\n    };\n    //call action creator with new task and project Id\n    this.props.addTask(this.projectId, task);\n    this.emitTaskChange();\n    this.setState({ addTodo: \"\" });\n  };\n\n  handleTaskEdit = (taskId, currentStatus) => {\n    const newStatus = currentStatus === \"todo\" ? \"inprogress\" : \"completed\";\n    this.props.editTask(this.projectId, taskId, newStatus);\n    this.emitTaskChange();\n  };\n\n  render() {\n    //material ui classes\n    const { classes } = this.props;\n    //get chat and tasks from selected project\n    const { chat, tasks } = this.props;\n    if (\n      this.props.projectUsers &&\n      this.props.projectUsers.some((id) => id === this.props.currentUser.userId)\n    ) {\n      return (\n        <div className={classes.wrapper}>\n          <Container className={classes.container} maxWidth=\"lg\">\n            <Grid\n              className={classes.grid}\n              container\n              xs={12}\n              spacing={3}\n              justify=\"space-between\"\n            >\n              <Grid item xs={12} sm={4}>\n                <ProjectCardColumn\n                  header=\"Things To Do\"\n                  onChange={this.onChange}\n                  addTodo={this.state.addTodo}\n                  onAddSubmit={this.onAddSubmit}\n                  cards={\n                    tasks && tasks.filter((task) => task.status === \"todo\")\n                  }\n                  handleTaskEdit={this.handleTaskEdit}\n                  emitTaskChange={this.emitTaskChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <ProjectCardColumn\n                  header=\"In Progress\"\n                  cards={\n                    tasks &&\n                    tasks.filter((task) => task.status === \"inprogress\")\n                  }\n                  handleTaskEdit={this.handleTaskEdit}\n                  emitTaskChange={this.emitTaskChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <ProjectCardColumn\n                  header=\"Completed\"\n                  cards={\n                    tasks && tasks.filter((task) => task.status === \"completed\")\n                  }\n                  emitTaskChange={this.emitTaskChange}\n                />\n              </Grid>\n              <footer className={classes.footer}>\n                <ProjectChat\n                  className={classes.chat}\n                  currentChat={this.state.newChat}\n                  onChange={this.onChatChange}\n                  onSubmit={this.onChatSubmit}\n                  chat={this.props.chat}\n                />\n              </footer>\n            </Grid>\n          </Container>\n        </div>\n      );\n    } else {\n      return (\n        <div className={classes.wrapper}>\n          <ProjectAlert\n            projectId={this.props.projectId}\n            users={this.props.projectUsers}\n            projectName={this.props.projectName}\n            currentUser={this.props.currentUser}\n          />\n          <Container className={classes.container} maxWidth=\"lg\">\n            <Grid\n              className={classes.grid}\n              container\n              spacing={3}\n              justify=\"space-between\"\n            >\n              <Grid item xs={12} sm={4}>\n                <ProjectCardColumn header=\"Things To Do\" />\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <ProjectCardColumn header=\"In Progress\" />\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <ProjectCardColumn header=\"Completed\" />\n              </Grid>\n              <footer className={classes.footer}>\n                <ProjectChat />\n              </footer>\n            </Grid>\n          </Container>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  if (state.selectProject) {\n    const {\n      users: projectUsers,\n      _id: projectId,\n      name: projectName,\n      chat,\n      tasks,\n    } = state.selectProject;\n\n    return {\n      currentUser: state.auth,\n      projectUsers,\n      projectName,\n      chat,\n      projectId,\n      tasks,\n    };\n  } else {\n    return {\n      currentUser: state.auth,\n    };\n  }\n};\n\nexport default withStyles(styles)(\n  connect(mapStateToProps, { fetchProject, addTask, addChat, editTask })(\n    ViewProject\n  )\n);\n","import React from \"react\";\nimport {\n  Grid,\n  makeStyles,\n  Container,\n  Typography,\n  Button,\n  withStyles,\n} from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\n\nimport collabPicture from \"../images/collaborate.svg\";\nimport remotePicture from \"../images/remote.svg\";\nimport GoogleAuth from \"./GoogleAuth\";\nimport { Link } from \"react-router-dom\";\n\nconst styles = (theme) => ({\n  wrapper: {\n    width: \"100vw\",\n    maxWidth: \"100%\",\n  },\n  container: {\n    height: \"80vh\",\n    margin: \"auto\",\n  },\n  subWrapper1: {\n    minHeight: \"80vh\",\n    width: \"100%\",\n    backgroundColor: theme.palette.paper.main,\n  },\n  subWrapper2: {\n    minHeight: `80vh`,\n    width: \"100%\",\n    backgroundColor: theme.palette.primary.main,\n  },\n  description: {\n    marginTop: \"auto\",\n  },\n  descriptionContainer: {\n    marginBottom: 20,\n  },\n\n  getStarted: {\n    textDecoration: \"none\",\n  },\n\n  //animations\n  \"@keyframes fadeIn\": {\n    from: {\n      opacity: 0,\n    },\n    to: {\n      opacity: 1,\n    },\n  },\n  descriptionAnimation: {\n    animationName: \"$fadeIn\",\n    animationDuration: \"8s\",\n  },\n});\n\nclass LandingPage extends React.Component {\n  buttonLink = () => {\n    if (this.props.isSignedIn) {\n      return (\n        <React.Fragment>\n          <Link\n            style={{ textDecoration: \"none\" }}\n            className={this.props.classes.getStarted}\n            to=\"/projects/new\"\n          >\n            <Button\n              className={this.props.classes.getStarted}\n              size=\"small\"\n              color=\"secondary\"\n              variant=\"contained\"\n            >\n              Get Started\n            </Button>\n          </Link>\n        </React.Fragment>\n      );\n    } else {\n      return <GoogleAuth type=\"landing\" />;\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.wrapper}>\n        <div className={classes.subWrapper1}>\n          <Container maxWidth=\"lg\">\n            <Grid\n              className={classes.container}\n              item\n              container\n              alignItems=\"center\"\n              justify={\"center\"}\n              spacing={3}\n              xs={12}\n              md={10}\n            >\n              <Grid item xs={12} md={4}>\n                <img height=\"100%\" width=\"100%\" src={collabPicture} alt=\"\" />\n              </Grid>\n              <Grid item container justify=\"space-around\" xs={12} md={8}>\n                <Grid\n                  item\n                  sm={12}\n                  container\n                  justify=\"space-between\"\n                  className={classes.descriptionContainer}\n                >\n                  <Grid item xs={5}>\n                    <Typography\n                      className={classes.descriptionAnimation}\n                      align=\"middle\"\n                      variant=\"h3\"\n                      color=\"primary\"\n                    >\n                      /prəˈjekt/\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={5}>\n                    <Typography\n                      className={classes.descriptionAnimation}\n                      align=\"middle\"\n                      variant=\"h3\"\n                      color=\"primary\"\n                    >\n                      /ˈpräˌjekt/\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography\n                      className={classes.descriptionAnimation}\n                      align=\"middle\"\n                      variant=\"body2\"\n                      color=\"primary\"\n                    >\n                      to extend outward beyond something else.\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography\n                      className={classes.descriptionAnimation}\n                      align=\"middle\"\n                      variant=\"body2\"\n                      color=\"primary\"\n                    >\n                      an individual or collaborative enterprise that is\n                      carefully planned and designed to achieve a particular\n                      aim.\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid item sm={6}>\n                  <Typography className={classes.descriptionAnimation} variant=\"subtitle1\" color=\"primary\">\n                    Project your project with real time collaboration and\n                    communication.\n                  </Typography>\n                  <GoogleAuth type=\"landing\" />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Container>\n        </div>\n\n        <div className={classes.subWrapper2}>\n          <Container maxWidth=\"lg\">\n            <Grid\n              className={classes.container}\n              item\n              container\n              alignItems=\"center\"\n              justify={\"center\"}\n              spacing={3}\n              xs={12}\n              md={10}\n            >\n              <Grid item xs={12} md={6}>\n                <Typography variant=\"h6\">\n                  Modern Problems Require Modern Solutions\n                </Typography>\n                <Typography variant=\"caption\">\n                  As the world shifts to remote workspaces, convenience and\n                  responsiveness are key. With Projectify, communicating with\n                  co-workers and collaborating on projects is now centralized in\n                  one application.\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <img\n                  height=\"100%\"\n                  width=\"100%\"\n                  src={remotePicture}\n                  alt=\"Working Remotely\"\n                />\n              </Grid>\n            </Grid>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { isSignedIn: state.auth.isSignedIn };\n};\n\nconst wrapped = connect(mapStateToProps)(LandingPage);\nexport default withStyles(styles)(wrapped);\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Grid,\n  Typography,\n  withStyles,\n  Container,\n} from \"@material-ui/core\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions\";\n\nconst styles = (theme) => ({\n  wrapper: {\n    width: \"100vw\",\n    maxWidth: \"100%\",\n    backgroundColor: theme.palette.paper.main,\n    height: \"94.5vh\",\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  multilineColor: {\n    color: \"white\",\n  },\n  notchedOutline: {\n    borderColor: theme.palette.info.main,\n  },\n  inputLabel: {\n    color: theme.palette.info.main,\n  },\n  input: {\n    color: theme.palette.info.main,\n  },\n  createHeading: {\n    color:\n      theme.palette.paper.main === \"#f0eef1\"\n        ? theme.palette.primary.main\n        : \"white\",\n  },\n});\n\nclass NewProject extends React.Component {\n  state = { projectName: \"\", redirect: false };\n\n  //set controlled input value for newly created project\n  handleChange = (event) => {\n    this.setState({ projectName: event.target.value });\n  };\n\n  // submit new project name\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    //redux action creator\n    this.props.createProject({\n      name: this.state.projectName,\n    });\n\n    //redirect to all projets list\n    this.setState({ redirect: true });\n  };\n\n  render() {\n    //handle redirect if user submitted new project\n    if (this.state.redirect) {\n      return <Redirect to=\"/project/view/all\"></Redirect>;\n    }\n    //JSS classes\n    const { classes } = this.props;\n    return (\n      <div className={classes.wrapper}>\n        <Container maxWidth={\"lg\"}>\n          <Grid\n            className={classes.grid}\n            container\n            spacing={3}\n            justify=\"space-between\"\n          >\n            <Container component=\"main\" maxWidth=\"xs\">\n              <CssBaseline />\n              <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                  <AddCircleIcon />\n                </Avatar>\n                <Typography\n                  component=\"h1\"\n                  variant=\"h6\"\n                  className={classes.createHeading}\n                >\n                  Create New Project\n                </Typography>\n                <form\n                  className={classes.form}\n                  noValidate\n                  onSubmit={this.onSubmit}\n                >\n                  <TextField\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"newProject\"\n                    label=\"Project Name\"\n                    name=\"newProject\"\n                    autoComplete=\"newProject\"\n                    autoFocus\n                    onChange={this.handleChange}\n                    InputLabelProps={{ className: classes.inputLabel }}\n                    InputProps={{\n                      className: classes.multilineColor,\n                      classes: {\n                        root: classes.input,\n                        notchedOutline: classes.notchedOutline,\n                      },\n                    }}\n                  />\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                  >\n                    Submit\n                  </Button>\n                </form>\n              </div>\n            </Container>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\n//connect redux action creators to component\nconst wrapped = connect(null, { createProject })(NewProject);\n\n//connect material ui styles\nexport default withStyles(styles)(wrapped);\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  makeStyles,\n  Container,\n  Typography,\n  TableContainer,\n  TableBody,\n  Table,\n  TableHead,\n  Paper,\n  TableRow,\n  TableCell,\n} from \"@material-ui/core\";\n\n//fetch streams action\nimport { fetchProjects } from \"../../actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    height: \"93vh\",\n    backgroundColor: theme.palette.paper.main,\n  },\n  tableContainer: {\n    backgroundColor: theme.palette.paper.light,\n    height: \"70vh\",\n  },\n  tableRow: {\n    textDecoration: \"none\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.paper.lighter,\n    },\n  },\n  tableCell: {\n    color: theme.palette.info.main,\n  },\n}));\n\nfunction ViewAllProjects() {\n  const classes = useStyles();\n\n  //redux dispath hook\n  const dispatch = useDispatch();\n\n  //get userId from state\n  const userId = useSelector((state) => state.auth.userId);\n  //get all projects loaded into state and turn into array\n  const projects = useSelector((state) => Object.values(state.projects));\n\n  //call for user projects when sign in registers\n  useEffect(() => {\n    dispatch(fetchProjects(userId));\n  }, [userId]);\n\n  // render all projects as a table row\n  const renderProjectList = () => {\n    return projects.map((proj) => {\n      return (\n        <TableRow\n          className={classes.tableRow}\n          component={Link}\n          to={`/project/view/${proj && proj._id}`}\n        >\n          <TableCell className={classes.tableCell}>{proj && proj.name}</TableCell>\n          <TableCell className={classes.tableCell} align=\"right\">\n            {proj && proj.users.length}\n          </TableCell>\n          <TableCell className={classes.tableCell} align=\"right\">\n            {proj && proj.tasks.length}\n          </TableCell>\n        </TableRow>\n      );\n    });\n  };\n\n  return (\n    <div className={classes.wrapper}>\n      <Container maxWidth=\"sm\">\n        <Typography variant=\"h6\" color=\"primary\" gutterBottom>\n          Your Projects\n        </Typography>\n        <TableContainer className={classes.tableContainer} component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell className={classes.tableCell}>Name</TableCell>\n                <TableCell className={classes.tableCell} align=\"right\">\n                  Users\n                </TableCell>\n                <TableCell className={classes.tableCell} align=\"right\">\n                  Current Tasks\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>{projects ? renderProjectList() : null}</TableBody>\n          </Table>\n        </TableContainer>\n      </Container>\n    </div>\n  );\n}\n\nexport default ViewAllProjects;\n","import React from \"react\"\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport { setRedirectUrl } from \"../actions\";\nimport LandingPage from \"./LandingPage\";\nimport { Route } from \"react-router-dom\";\n\nclass EnsureLoggedInContainer extends React.Component {\n    \n    componentDidMount() {\n      const { history, currentURL } = this.props\n      \n      if (!this.props.isSignedIn) {\n        // console.log(\"EnsureLoggedInContainer component called : \" + currentURL);\n        console.log(`EnsureLoggedInContainer component when signed in state is ${this.props.isSignedIn} called : ` + currentURL);\n        console.log(currentURL)\n        this.props.setRedirectUrl(currentURL);\n        // if(history) history.push('/');\n      }\n    }\n  \n    render() {\n     console.log(\"EnsureLoggedInContainer render called: \" + this.props.isSignedIn);\n      if (this.props.isSignedIn) {\n        return this.props.children\n      } else {\n        return null\n      }\n    }\n  }\n  \n  function mapStateToProps(state, ownProps) {\n    return {\n        isSignedIn: state.auth.isSignedIn,\n        currentURL: ownProps.location.pathname\n      // currentURL: ownProps\n    }\n  }\n  \n  export default  withRouter(connect(mapStateToProps, {setRedirectUrl})(EnsureLoggedInContainer))","import React, { useState } from \"react\";\nimport AppBar from \"./AppBar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\n\nimport ViewProject from \"./project/ViewProject\";\nimport LandingPage from \"./LandingPage\";\nimport NewProject from \"./project/NewProject\";\nimport ViewAllProjects from \"./project/ViewAllProjects\";\nimport EnsureLoggedInContainer from \"./EnsureLoggedInContainer\";\n\nexport default () => {\n  //hook for light vs dark mode\n  const [darkMode, setDarkMode] = useState(true);\n\n  //initialize theme for material ui\n  const theme = createMuiTheme({\n    palette: {\n      primary: { main: darkMode ? \"#7BC8F6\" : \"#58baf3\" },\n      secondary: { main: darkMode ? \"#A7FFB5\" : \"#aaf0ae\" },\n      paper: {\n        main: darkMode ? \"#212121\" : \"#f0eef1\",\n        light: darkMode ? \"#262626\" : \"#e6e3e8\",\n        lighter: darkMode ? \"#333333\" : \"#FFFFFF\",\n      },\n      info: { main: \"#a6a6a6\" },\n    },\n    typography: {\n      fontFamily: '\"Quicksand\", \"Helvetica\", \"Arial\", sans-serif',\n      fontSize: 16,\n      fontWeightLight: 300,\n      fontWeightRegular: 400,\n      fontWeightMedium: 500,\n    },\n    overrides: {\n      MuiMenu: {\n        list: {\n          padding: 0,\n        },\n      },\n      MuiExpansionPanelSummary: {\n        root: {\n          disabled: {\n            opacity: \"0.0\",\n          },\n        },\n      },\n    },\n    shadows: [\"none\"],\n  });\n\n  // fx to be passed to app bar to toggle dark mode\n  const toggleTheme = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <AppBar toggleTheme={toggleTheme} />\n        <Switch>\n          <Route path=\"/\" exact component={LandingPage} />\n          {/* <EnsureLoggedInContainer> */}\n          <Route path=\"/project/view/all\" exact component={ViewAllProjects} />\n          <Route path=\"/project/view/:id\" exact component={ViewProject} />\n          <Route path=\"/project/new\" exact component={NewProject} />\n          {/* </EnsureLoggedInContainer> */}\n        </Switch>\n      </ThemeProvider>\n    </Router>\n  );\n};\n","import {\n  SIGN_IN,\n  SIGN_OUT,\n  SET_REDIRECT_URL,\n  REMOVE_NOTIFICATION,\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  isSignedIn: null,\n  userId: null,\n  redirectURL: null,\n  notifications: [],\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      return {\n        ...state,\n        isSignedIn: true,\n        userId: action.payload.userId,\n        name: action.payload.name,\n        notifications: action.payload.notifications,\n      };\n    case SIGN_OUT:\n      return { ...state, isSignedIn: false, userId: null };\n    case SET_REDIRECT_URL:\n      return { ...state, redirectURL: action.payload.redirectURL };\n    case REMOVE_NOTIFICATION:\n      return {\n        ...state,\n        notifications: [\n          ...state.notifications.filter(\n            (notif) => notif._id !== action.payload\n          ),\n        ],\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport projectsReducer from \"./projectsReducer\";\nimport selectProjectReducer from \"./selectProjectReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  projects: projectsReducer,\n  selectProject: selectProjectReducer,\n});\n","import _ from \"lodash\";\nimport {\n  CREATE_PROJECT,\n  FETCH_PROJECTS,\n  FETCH_PROJECT,\n} from \"../actions/types\";\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case CREATE_PROJECT:\n      return { ...state, [action.payload._id]: action.payload };\n    case FETCH_PROJECTS:\n      return { ...state, ..._.mapKeys(action.payload, \"_id\") };\n    case FETCH_PROJECT:\n      return { ...state, [action.payload._id]: action.payload };\n    default:\n      return { ...state };\n  }\n};\n","import { FETCH_PROJECT, ADD_TASK, EDIT_TASK, ADD_CHAT } from \"../actions/types\";\n\n\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_PROJECT:\n      return { ...action.payload };\n    case ADD_TASK:\n      return { ...state, tasks: [...state.tasks, action.payload] };\n\n    case ADD_CHAT:\n      return { ...state, chat: [...state.chat, action.payload] };\n\n    case EDIT_TASK:\n      state.tasks.find(task => task._id === action.payload.taskId).status = action.payload.status;\n      return { ...state, tasks: [...state.tasks] };\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reducers from \"./reducers\";\nimport reduxThunk from \"redux-thunk\";\n\n// Connecting redux dev tools to our app\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}